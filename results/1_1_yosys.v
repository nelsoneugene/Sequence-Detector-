/* Generated by Yosys 0.47+116 (git sha1 4b3c03dab, clang++ 18.1.8 -fPIC -O3) */

(* src = "/home/owais/OpenROAD-flow-scripts/flow/designs/src/sequence_detector_110/sequence_detector_110.v:2.1-62.10" *)
(* top =  1  *)
(* hdlname = "sequence_detector_110" *)
module sequence_detector_110(clk_i, reset_i, seq_in, detect);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  (* src = "/home/owais/OpenROAD-flow-scripts/flow/designs/src/sequence_detector_110/sequence_detector_110.v:11.9-11.14" *)
  input clk_i;
  wire clk_i;
  wire \current_state[0] ;
  wire \current_state[1] ;
  wire \current_state[2] ;
  (* src = "/home/owais/OpenROAD-flow-scripts/flow/designs/src/sequence_detector_110/sequence_detector_110.v:12.14-12.20" *)
  output detect;
  wire detect;
  (* src = "/home/owais/OpenROAD-flow-scripts/flow/designs/src/sequence_detector_110/sequence_detector_110.v:11.15-11.22" *)
  input reset_i;
  wire reset_i;
  (* src = "/home/owais/OpenROAD-flow-scripts/flow/designs/src/sequence_detector_110/sequence_detector_110.v:11.23-11.29" *)
  input seq_in;
  wire seq_in;
  sky130_fd_sc_hd__nor2_1 _08_ (
    .A(\current_state[0] ),
    .B(detect),
    .Y(_04_)
  );
  sky130_fd_sc_hd__nor2_1 _09_ (
    .A(reset_i),
    .B(\current_state[1] ),
    .Y(_05_)
  );
  sky130_fd_sc_hd__nand2b_4 _10_ (
    .A_N(reset_i),
    .B(seq_in),
    .Y(_06_)
  );
  sky130_fd_sc_hd__a21boi_2 _11_ (
    .A1(_04_),
    .A2(_05_),
    .B1_N(_06_),
    .Y(_03_)
  );
  sky130_fd_sc_hd__nor2_1 _12_ (
    .A(_04_),
    .B(_06_),
    .Y(_00_)
  );
  sky130_fd_sc_hd__nor3b_1 _13_ (
    .A(reset_i),
    .B(seq_in),
    .C_N(\current_state[2] ),
    .Y(_02_)
  );
  sky130_fd_sc_hd__nor2_1 _14_ (
    .A(\current_state[1] ),
    .B(\current_state[2] ),
    .Y(_07_)
  );
  sky130_fd_sc_hd__nor2_1 _15_ (
    .A(_06_),
    .B(_07_),
    .Y(_01_)
  );
  sky130_fd_sc_hd__dfxtp_1 \current_state[0]$_DFF_P_  (
    .CLK(clk_i),
    .D(_03_),
    .Q(\current_state[0] )
  );
  sky130_fd_sc_hd__dfxtp_1 \current_state[1]$_DFF_P_  (
    .CLK(clk_i),
    .D(_00_),
    .Q(\current_state[1] )
  );
  sky130_fd_sc_hd__dfxtp_1 \current_state[2]$_DFF_P_  (
    .CLK(clk_i),
    .D(_01_),
    .Q(\current_state[2] )
  );
  sky130_fd_sc_hd__dfxtp_1 \current_state[3]$_DFF_P_  (
    .CLK(clk_i),
    .D(_02_),
    .Q(detect)
  );
endmodule
